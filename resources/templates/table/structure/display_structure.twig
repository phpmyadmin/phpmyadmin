{% extends 'table/page_with_secondary_tabs.twig' %}
{% block content %}
<h1 class="d-none d-print-block">{{ table }}</h1>
<form method="post" action="{{ url('/table/structure') }}" name="fieldsForm" id="fieldsForm">
    {{ get_hidden_inputs(db, table) }}
    <input type="hidden" name="table_type" value=
        {%- if db_is_system_schema -%}
            "information_schema"
        {%- elseif tbl_is_view -%}
            "view"
        {%- else -%}
            "table"
        {%- endif %}>
    <div class="table-responsive-md">
    <table id="tablestructure" class="table table-striped table-hover w-auto align-middle">
        {# Table header #}
        <thead>
            <tr>
                <th class="d-print-none"></th>
                <th>#</th>
                <th>{{ t('Name') }}</th>
                <th>{{ t('Type') }}</th>
                <th>{{ t('Collation') }}</th>
                <th>{{ t('Attributes') }}</th>
                <th>{{ t('Null') }}</th>
                <th>{{ t('Default') }}</th>
                {% if show_column_comments -%}
                    <th>{{ t('Comments') }}</th>
                {%- endif %}
                <th>{{ t('Extra') }}</th>
                {# @see table/structure.js, function moreOptsMenuResize() #}
                {% if not db_is_system_schema and not tbl_is_view %}
                    <th colspan="{{ show_icons('ActionLinksMode') ? '8' : '9' -}}
                        " class="action d-print-none">{{ t('Action') }}</th>
                {% endif %}
            </tr>
        </thead>
        <tbody>
        {# Table body #}
        {% set rownum = 0 %}
        {% for row in fields %}
            {% set rownum = rownum + 1 %}

            {% set extracted_columnspec = extracted_columnspecs[rownum] %}
            {% set field_name = row.field|e %}
            {# For column comments #}
            {% set comments = row_comments[rownum] %}
            {# Underline commented fields and display a hover-title (CSS only) #}

        <tr>
            <td class="text-center d-print-none">
                <input type="checkbox" class="checkall" name="selected_fld[]" value="{{ row.field }}" id="checkbox_row_{{ rownum }}">
            </td>
            <td class="text-end">{{ rownum }}</td>
            <th class="text-nowrap">
                <label for="checkbox_row_{{ rownum }}">
                    {% if displayed_fields[rownum].comment is defined %}
                        <span class="commented_column" title="{{ displayed_fields[rownum].comment }}">{{ displayed_fields[rownum].text }}</span>
                    {% else %}
                        {{ displayed_fields[rownum].text }}
                    {% endif %}
                    {{ displayed_fields[rownum].icon|raw }}
                </label>
            </th>
            <td{{ 'set' != extracted_columnspec['type'] and 'enum' != extracted_columnspec['type'] ? ' class="text-nowrap"' }}>
                <bdo dir="ltr" lang="en">
                    {{ extracted_columnspec['displayed_type']|raw }}
                    {% if relation_parameters.columnCommentsFeature is not null and relation_parameters.browserTransformationFeature is not null and browse_mime
                        and mime_map[row.field]['mimetype'] is defined %}
                        <br>{{ t('Media type:') }} {{ mime_map[row.field]['mimetype']|replace({'_': '/'})|lower }}
                    {% endif %}
                </bdo>
            </td>
            <td>
            {% if row.collation is not empty %}
                <dfn title="{{ collations[row.collation].description }}">{{ collations[row.collation].name }}</dfn>
            {% endif %}
            </td>
            <td class="column_attribute text-nowrap">{{ attributes[rownum] }}</td>
            <td>{{ row.isNull ? t('Yes') : t('No') }}</td>
            <td class="text-nowrap">
                {%- if row.default is not null -%}
                    {%- if extracted_columnspec['type'] == 'bit' -%}
                        {{- row.default|convert_bit_default_value -}}
                    {%- else -%}
                        {{- row.default -}}
                    {%- endif -%}
                {%- elseif row.isNull -%}
                    <em>NULL</em>
                {%- else -%}
                    <em>{{ t('None', context = 'None for default') }}</em>
                {%- endif -%}
            </td>
            {% if show_column_comments %}
                <td>
                    {{ comments }}
                </td>
            {% endif %}
            <td class="text-nowrap">{{ row.extra|upper }}</td>
            {% if not tbl_is_view and not db_is_system_schema %}
                <td class="edit text-center d-print-none">
                    <a class="change_column_anchor ajax" href="{{ url('/table/structure/change', {
                      'db': db,
                      'table': table,
                      'field': row.field,
                      'change_column': 1
                    }) }}">
                      {{ get_icon('b_edit', t('Change')) }}
                    </a>
                </td>
                <td class="drop text-center d-print-none">
                    <a class="drop_column_anchor ajax" href="{{ url('/sql') }}" data-post="{{ get_common({
                      'db': db,
                      'table': table,
                      'sql_query': 'ALTER TABLE ' ~ backquote(table) ~ ' DROP ' ~ backquote(row.field) ~ ';',
                      'dropped_column': row.field,
                      'purge': true,
                      'message_to_show': t('Column %s has been dropped.')|format(row.field|e)
                    }, '', false) }}">
                      {{ get_icon('b_drop', t('Drop')) }}
                    </a>
                </td>
            {% endif %}

            {% if not tbl_is_view and not db_is_system_schema %}
                {% set type = extracted_columnspec['print_type'] is not empty ? extracted_columnspec['print_type'] %}
                <td class="d-print-none">
                  {% if hide_structure_actions %}
                  <div class="dropdown">
                    <button class="btn btn-link p-0 dropdown-toggle" type="button" id="moreActionsButton" data-bs-toggle="dropdown" aria-expanded="false">{{ t('More') }}</button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="moreActionsButton">
                  {% else %}
                    <ul class="nav">
                  {% endif %}
                        <li class="{{ not hide_structure_actions ? 'nav-item ' }}primary text-nowrap">
                          {% if type == 'text' or type == 'blob' or tbl_storage_engine == 'ARCHIVE' or (primary and primary.hasColumn(field_name)) %}
                            <span class="{{ hide_structure_actions ? 'dropdown-item-text' : 'nav-link px-1' }} disabled">{{ get_icon('bd_primary', t('Primary')) }}</span>
                          {% else %}
                            <a rel="samepage" class="{{ hide_structure_actions ? 'dropdown-item' : 'nav-link px-1' }} ajax add_key d-print-none add_primary_key_anchor" href="{{ url('/table/structure/add-key', {'db': db, 'table': table}) }}" data-post="{{ get_common({
                              'selected_fld': [row.field],
                              'key_type': 'PRIMARY',
                            }, '', false) }}">
                              {{ get_icon('b_primary', t('Primary')) }}
                            </a>
                          {% endif %}
                        </li>

                        <li class="{{ not hide_structure_actions ? 'nav-item ' }}add_unique unique text-nowrap">
                          {% if type == 'text' or type == 'blob' or tbl_storage_engine == 'ARCHIVE' %}
                            <span class="{{ hide_structure_actions ? 'dropdown-item-text' : 'nav-link px-1' }} disabled">{{ get_icon('bd_unique', t('Unique')) }}</span>
                          {% else %}
                            <a rel="samepage" class="{{ hide_structure_actions ? 'dropdown-item' : 'nav-link px-1' }} ajax add_key d-print-none add_unique_anchor" href="{{ url('/table/structure/add-key', {'db': db, 'table': table}) }}" data-post="{{ get_common({
                              'selected_fld': [row.field],
                              'key_type': 'UNIQUE',
                            }, '', false) }}">
                              {{ get_icon('b_unique', t('Unique')) }}
                            </a>
                          {% endif %}
                        </li>

                        <li class="{{ not hide_structure_actions ? 'nav-item ' }}add_index text-nowrap">
                          {% if type == 'text' or type == 'blob' or tbl_storage_engine == 'ARCHIVE' %}
                            <span class="{{ hide_structure_actions ? 'dropdown-item-text' : 'nav-link px-1' }} disabled">{{ get_icon('bd_index', t('Index')) }}</span>
                          {% else %}
                            <a rel="samepage" class="{{ hide_structure_actions ? 'dropdown-item' : 'nav-link px-1' }} ajax add_key d-print-none add_index_anchor" href="{{ url('/table/structure/add-key', {'db': db, 'table': table}) }}" data-post="{{ get_common({
                              'selected_fld': [row.field],
                              'key_type': 'INDEX',
                            }, '', false) }}">
                              {{ get_icon('b_index', t('Index')) }}
                            </a>
                          {% endif %}
                        </li>

                        {% set spatial_types = [
                            'geometry',
                            'point',
                            'linestring',
                            'polygon',
                            'multipoint',
                            'multilinestring',
                            'multipolygon',
                            'geomtrycollection'
                        ] %}
                        <li class="{{ not hide_structure_actions ? 'nav-item ' }}spatial text-nowrap">
                          {% if type == 'text' or type == 'blob' or tbl_storage_engine == 'ARCHIVE' or (type not in spatial_types and (tbl_storage_engine == 'MYISAM' or mysql_int_version >= 50705)) %}
                            <span class="{{ hide_structure_actions ? 'dropdown-item-text' : 'nav-link px-1' }} disabled">{{ get_icon('bd_spatial', t('Spatial')) }}</span>
                          {% else %}
                            <a rel="samepage" class="{{ hide_structure_actions ? 'dropdown-item' : 'nav-link px-1' }} ajax add_key d-print-none add_spatial_anchor" href="{{ url('/table/structure/add-key', {'db': db, 'table': table}) }}" data-post="{{ get_common({
                              'selected_fld': [row.field],
                              'key_type': 'SPATIAL',
                            }, '', false) }}">
                              {{ get_icon('b_spatial', t('Spatial')) }}
                            </a>
                          {% endif %}
                        </li>

                        {# FULLTEXT is possible on TEXT, CHAR and VARCHAR #}
                        <li class="{{ not hide_structure_actions ? 'nav-item ' }}fulltext text-nowrap">
                        {% if tbl_storage_engine is not empty and (
                                tbl_storage_engine == 'MYISAM'
                                or tbl_storage_engine == 'ARIA'
                                or tbl_storage_engine == 'MARIA'
                                or (tbl_storage_engine == 'INNODB' and mysql_int_version >= 50604)
                            ) and ('text' in type or 'char' in type) %}
                            <a rel="samepage" class="{{ hide_structure_actions ? 'dropdown-item' : 'nav-link px-1' }} ajax add_key add_fulltext_anchor" href="{{ url('/table/structure/add-key', {'db': db, 'table': table}) }}" data-post="{{ get_common({
                              'selected_fld': [row.field],
                              'key_type': 'FULLTEXT',
                            }, '', false) }}">
                              {{ get_icon('b_ftext', t('Fulltext')) }}
                            </a>
                        {% else %}
                            <span class="{{ hide_structure_actions ? 'dropdown-item-text' : 'nav-link px-1' }} disabled">{{ get_icon('bd_ftext', t('Fulltext')) }}</span>
                        {% endif %}
                        </li>

                        {# Distinct value action #}
                        <li class="{{ not hide_structure_actions ? 'nav-item ' }}browse text-nowrap">
                            <a class="{{ hide_structure_actions ? 'dropdown-item' : 'nav-link px-1' }}" href="{{ url('/sql') }}" data-post="{{ get_common({
                              'db': db,
                              'table': table,
                              'sql_query': 'SELECT COUNT(*) AS ' ~ backquote(t('Rows'))
                                ~ ', ' ~ backquote(row.field)
                                ~ ' FROM ' ~ backquote(table)
                                ~ ' GROUP BY ' ~ backquote(row.field)
                                ~ ' ORDER BY ' ~ backquote(row.field),
                              'is_browse_distinct': true
                            }, '', false) }}">
                              {{ get_icon('b_browse', t('Distinct values')) }}
                            </a>
                        </li>
                        {% if relation_parameters.centralColumnsFeature is not null %}
                            <li class="{{ not hide_structure_actions ? 'nav-item ' }}browse text-nowrap">
                            {% if row.field in central_list %}
                                <a class="{{ hide_structure_actions ? 'dropdown-item' : 'nav-link px-1' }}" href="{{ url('/table/structure/central-columns-remove') }}" data-post="{{ get_common({
                                  'db': db,
                                  'table': table,
                                  'selected_fld': [row.field],
                                }) }}">
                                    {{ get_icon('centralColumns_delete', t('Remove from central columns')) }}
                                </a>
                            {% else %}
                                <a class="{{ hide_structure_actions ? 'dropdown-item' : 'nav-link px-1' }}" href="{{ url('/table/structure/central-columns-add') }}" data-post="{{ get_common({
                                  'db': db,
                                  'table': table,
                                  'selected_fld': [row.field],
                                }) }}">
                                    {{ get_icon('centralColumns_add', t('Add to central columns')) }}
                                </a>
                            {% endif %}
                            </li>
                        {% endif %}
                  {% if not hide_structure_actions %}
                    </ul>
                  {% else %}
                    </ul>
                  </div>
                  {% endif %}
                </td>
            {% endif %}
        </tr>
        {% endfor %}
        </tbody>
    </table>
    </div>
    <div class="d-print-none">
        {% include 'select_all.twig' with {
            'form_name': 'fieldsForm'
        } only %}

        <button class="btn btn-link mult_submit" type="submit" formaction="{{ url('/table/structure/browse') }}">
          {{ get_icon('b_browse', t('Browse')) }}
        </button>

        {% if not tbl_is_view and not db_is_system_schema %}
          <button class="btn btn-link mult_submit" type="submit" formaction="{{ url('/table/structure/change') }}">
            {{ get_icon('b_edit', t('Change')) }}
          </button>
          <button class="btn btn-link mult_submit" type="submit" formaction="{{ url('/table/structure/drop-confirm') }}">
            {{ get_icon('b_drop', t('Drop')) }}
          </button>

          {% if tbl_storage_engine != 'ARCHIVE' %}
            <button class="btn btn-link mult_submit" type="submit" formaction="{{ url('/table/structure/primary') }}">
              {{ get_icon('b_primary', t('Primary')) }}
            </button>
            <button class="btn btn-link mult_submit" type="submit" formaction="{{ url('/table/structure/unique') }}">
              {{ get_icon('b_unique', t('Unique')) }}
            </button>
            <button class="btn btn-link mult_submit" type="submit" formaction="{{ url('/table/structure/index') }}">
              {{ get_icon('b_index', t('Index')) }}
            </button>
            <button class="btn btn-link mult_submit" type="submit" formaction="{{ url('/table/structure/spatial') }}">
              {{ get_icon('b_spatial', t('Spatial')) }}
            </button>
            <button class="btn btn-link mult_submit" type="submit" formaction="{{ url('/table/structure/fulltext') }}">
              {{ get_icon('b_ftext', t('Fulltext')) }}
            </button>

            {% if relation_parameters.centralColumnsFeature is not null %}
              <button class="btn btn-link mult_submit" type="submit" formaction="{{ url('/table/structure/central-columns-add') }}">
                {{ get_icon('centralColumns_add', t('Add to central columns')) }}
              </button>
              <button class="btn btn-link mult_submit" type="submit" formaction="{{ url('/table/structure/central-columns-remove') }}">
                {{ get_icon('centralColumns_delete', t('Remove from central columns')) }}
              </button>
            {% endif %}
          {% endif %}
        {% endif %}
    </div>
</form>
<hr class="d-print-none">

<div class="modal fade" id="moveColumnsModal" tabindex="-1" aria-labelledby="moveColumnsModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="moveColumnsModalLabel">{{ t('Move columns') }}</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="{{ t('Close') }}"></button>
      </div>
      <div class="modal-body">
        <div id="move_columns_dialog" title="{{ t('Move columns') }}">
          <p>{{ t('Move the columns by dragging them up and down.') }}</p>
          <form action="{{ url('/table/structure/move-columns') }}" name="move_column_form" id="move_column_form">
            <div>
              {{ get_hidden_inputs(db, table) }}
              <ul></ul>
            </div>
          </form>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="designerModalGoButton">{{ t('Go') }}</button>
        <button type="button" class="btn btn-secondary" id="designerModalPreviewButton" data-bs-target="#designerModalPreviewModal" data-bs-toggle="modal">{{ t('Preview SQL') }}</button>
        <button type="button" class="btn btn-secondary" id="designerModalCloseButton" data-bs-dismiss="modal">{{ t('Close') }}</button>
      </div>
    </div>
  </div>
</div>
<div class="modal fade" id="designerModalPreviewModal" aria-hidden="true" aria-labelledby="designerModalPreviewModalLabel" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="designerModalPreviewModalLabel">{{ t('Preview SQL') }}</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="{{ t('Close') }}"></button>
      </div>
      <div class="modal-body">
        <div class="spinner-border" role="status">
          <span class="visually-hidden">{{ t('Loading…') }}</span>
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn btn-primary" data-bs-target="#moveColumnsModal" data-bs-toggle="modal">{{ t('Go back') }}</button>
      </div>
    </div>
  </div>
</div>
<div class="modal fade" id="moveColumnsErrorModal" tabindex="-1" aria-labelledby="moveColumnsErrorModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="moveColumnsErrorModalLabel">{{ t('Error') }}</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="{{ t('Close') }}"></button>
      </div>
      <div class="modal-body">
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ t('OK') }}</button>
      </div>
    </div>
  </div>
</div>

{# Work on the table #}
<div id="structure-action-links" class="d-print-none">
    {% if tbl_is_view and not db_is_system_schema %}
        {{ link_or_button(
            url('/view/create'),
            {'db': db, 'table': table},
            get_icon('b_edit', t('Edit view'), true)
        ) }}
    {% endif %}
    <button type="button" class="btn btn-link p-0 jsPrintButton">{{ get_icon('b_print', t('Print'), true) }}</button>
    {% if not tbl_is_view and not db_is_system_schema %}
        {# Only display propose table structure for MySQL < 8.0 #}
        {% if mysql_int_version < 80000 or is_mariadb %}
          <a class="me-0" href="{{ url('/sql') }}" data-post="{{ get_common({
            'db': db,
            'table': table,
            'sql_query': 'SELECT * FROM ' ~ backquote(table) ~ ' PROCEDURE ANALYSE()',
            'session_max_rows': 'all'
          }, '', false) }}">
            {{ get_icon(
              'b_tblanalyse',
              t('Propose table structure'),
              true
            ) }}
          </a>
          {{ show_mysql_docu('procedure_analyse') }}
        {% endif %}
        {% if is_active %}
            <a href="{{ url('/table/tracking', {'db': db, 'table': table}) }}">
                {{ get_icon('eye', t('Track table'), true) }}
            </a>
        {% endif %}
        <a href="#" id="move_columns_anchor">
            {{ get_icon('b_move', t('Move columns'), true) }}
        </a>
        <a href="{{ url('/normalization', {'db': db, 'table': table}) }}">
            {{ get_icon('normalize', t('Normalize'), true) }}
        </a>
        <a href="{{ url('/database/structure/show-create') }}" data-post="{{ get_common({
            'db': db,
            'selected_tbl[]': table,
            'sql_query': '',
            'session_max_rows': 'all'
          }, '', false) }}">
            {{ get_icon('b_sql', t('Show create'), true) }}
        </a>
    {% endif %}
    {% if tbl_is_view and not db_is_system_schema %}
        {% if is_active %}
            <a href="{{ url('/table/tracking', {'db': db, 'table': table}) }}">
                {{ get_icon('eye', t('Track view'), true) }}
            </a>
        {% endif %}
    {% endif %}
</div>
{% if not tbl_is_view and not db_is_system_schema %}
    <form method="post" action="{{ url('/table/add-field') }}" id="addColumns" name="addColumns" class="d-print-none">
        {{ get_hidden_inputs(db, table) }}
        {% if show_icons('ActionLinksMode') %}
            {{ get_image('b_insrow', t('Add column')) }}&nbsp;
        {% endif %}
        {% set num_fields -%}
            <input type="number" name="num_fields" value="1" onfocus="this.select()" min="1" required>
        {%- endset %}
        {{ t('Add %s column(s)')|format(num_fields)|raw }}
        <input type="hidden" name="field_where" value="after">&nbsp;
        {# I tried displaying the drop-down inside the label but with Firefox the drop-down was blinking #}
        <select name="after_field">
            <option value="first" data-pos="first">
                {{ t('at beginning of table') }}
            </option>
            {% for one_column_name in columns_list %}
                <option value="{{ one_column_name }}"
                    {{- loop.revindex0 == 0 ? ' selected' }}>
                    {{ t('after %s')|format(one_column_name) }}
                </option>
            {% endfor %}
        </select>
        <input class="btn btn-primary" type="submit" value="{{ t('Go') }}">
    </form>
{% endif %}

{% if not tbl_is_view and not db_is_system_schema and tbl_storage_engine != 'ARCHIVE' %}
  <div id="index_div" class="card mb-3 ajax">
    <div class="card-header">
      {{ t('Indexes') }}
      {{ show_mysql_docu('optimizing-database-structure') }}
    </div>

    <div class="card-body index_info">
      {% if indexes is not empty %}
        {{ indexes_duplicates|raw }}

        {{ include('modals/preview_sql_confirmation.twig') }}
        <div class="table-responsive jsresponsive">
          <table class="table table-striped table-hover table-sm w-auto align-middle" id="table_index">
            <thead>
              <tr>
                <th colspan="3" class="d-print-none">{{ t('Action') }}</th>
                <th>{{ t('Keyname') }}</th>
                <th>{{ t('Type') }}</th>
                <th>{{ t('Unique') }}</th>
                <th>{{ t('Packed') }}</th>
                <th>{{ t('Column') }}</th>
                <th>{{ t('Cardinality') }}</th>
                <th>{{ t('Collation') }}</th>
                <th>{{ t('Null') }}</th>
                <th>{{ t('Comment') }}</th>
              </tr>
            </thead>

          <tbody class="row_span">
            {% for index in indexes %}
                {% set columns_count = index.getColumnCount() %}
                <tr class="noclick">
                <td rowspan="{{ columns_count }}" class="edit_index d-print-none ajax">
                  <a class="ajax" href="{{ url('/table/indexes') }}" data-post="{{ get_common({
                    'db': db,
                    'table': table,
                    'index': index.getName()
                  }, '', false) }}">
                    {{ get_icon('b_edit', t('Edit')) }}
                  </a>
                </td>
                <td rowspan="{{ columns_count }}" class="rename_index d-print-none ajax" >
                  <a class="ajax" href="{{ url('/table/indexes/rename') }}" data-post="{{ get_common({
                    'db': db,
                    'table': table,
                    'index': index.getName()
                  }, '', false) }}">
                    {{ get_icon('b_rename', t('Rename')) }}
                  </a>
                </td>
                <td rowspan="{{ columns_count }}" class="d-print-none">
                  {% if index.getName() == 'PRIMARY' %}
                    {% set index_params = {
                      'sql_query': 'ALTER TABLE ' ~ backquote(table) ~ ' DROP PRIMARY KEY;',
                      'message_to_show': t('The primary key has been dropped.')
                    } %}
                  {% else %}
                    {% set index_params = {
                      'sql_query': 'ALTER TABLE ' ~ backquote(table) ~ ' DROP INDEX ' ~ backquote(index.getName()) ~ ';',
                      'message_to_show': t('Index %s has been dropped.')|format(index.getName())
                    } %}
                  {% endif %}

                  <input type="hidden" class="drop_primary_key_index_msg" value="{{ index_params.sql_query }}">
                  {{ link_or_button(
                    url('/sql'),
                    index_params|merge({'db': db, 'table': table}),
                    get_icon('b_drop', t('Drop')),
                    {'class': 'drop_primary_key_index_anchor ajax'}
                  ) }}
                </td>
                <th rowspan="{{ columns_count }}">{{ index.getName() }}</th>
                <td rowspan="{{ columns_count }}">{{ index.getType()|default(index.getChoice()) }}</td>
                <td rowspan="{{ columns_count }}">{{ index.isUnique() ? t('Yes') : t('No') }}</td>
                <td rowspan="{{ columns_count }}">{{ index.isPacked()|raw }}</td>

                {% for column in index.getColumns() %}
                  {% if column.getSeqInIndex() > 1 %}
                    <tr class="noclick">
                  {% endif %}
                  <td>
                    {% if column.hasExpression() %}{{ column.getExpression() }}{% else %}{{ column.getName() }}{% endif %}
                    {% if column.getSubPart() is not empty %}
                      ({{ column.getSubPart() }})
                    {% endif %}
                  </td>
                  <td>{{ column.getCardinality() }}</td>
                  <td>{{ column.getCollation() }}</td>
                  <td>{{ column.getNull() }}</td>

                  {% if column.getSeqInIndex() == 1 %}
                    <td rowspan="{{ columns_count }}">{{ index.getComments() }}</td>
                  {% endif %}
                  </tr>
                {% endfor %}
              {% endfor %}
            </tbody>
          </table>
        </div>
      {% else %}
        <div class="no_indexes_defined">{{ t('No index defined!')|notice }}</div>
      {% endif %}
    </div>

    <div class="card-footer d-print-none">
      <form action="{{ url('/table/indexes') }}" method="post">
        {{ get_hidden_inputs(db, table) }}
        <input type="hidden" name="create_index" value="1">

        {% apply format('<input class="mx-2" type="number" name="added_fields" value="1" min="1" max="16" required>')|raw %}
          {{ t('Create an index on %s columns') }}
        {% endapply %}

        <input class="btn btn-primary add_index ajax" type="submit" value="{{ t('Go') }}">
      </form>
    </div>
  </div>
  {{ include('modals/index_dialog_modal.twig') }}
{% endif %}

{# Display partition details #}
{% if have_partitioning %}
    {# Detect partitioning #}
    {% if partition_names is not empty and partition_names[0] is not null %}
        {% set first_partition = partitions[0] %}
        {% set range_or_list = first_partition.getMethod() == 'RANGE'
            or first_partition.getMethod() == 'RANGE COLUMNS'
            or first_partition.getMethod() == 'LIST'
            or first_partition.getMethod() == 'LIST COLUMNS' %}
        {% set sub_partitions = first_partition.getSubPartitions() %}
        {% set has_sub_partitions = first_partition.hasSubPartitions() %}
        {% if has_sub_partitions %}
            {% set first_sub_partition = sub_partitions[0] %}
        {% endif %}

        {% if default_sliders_state != 'disabled' %}
        <div class="mb-3">
          <button class="btn btn-sm btn-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#partitionsCollapse" aria-expanded="{{ default_sliders_state == 'open' ? 'true' : 'false' }}" aria-controls="partitionsCollapse">
            {{ t('Partitions') }}
          </button>
        </div>
        <div class="collapse mb-3{{ default_sliders_state == 'open' ? ' show' }}" id="partitionsCollapse">
        {% endif %}

        {% include 'table/structure/display_partitions.twig' with {
            'db': db,
            'table': table,
            'partitions': partitions,
            'partition_method': first_partition.getMethod(),
            'partition_expression': first_partition.getExpression(),
            'has_description': first_partition.getDescription() is not empty,
            'has_sub_partitions': has_sub_partitions,
            'sub_partition_method': has_sub_partitions ? first_sub_partition.getMethod(),
            'sub_partition_expression': has_sub_partitions ? first_sub_partition.getExpression(),
            'range_or_list': range_or_list
        } only %}
    {% else %}
        {% include 'table/structure/display_partitions.twig' with {
            'db': db,
            'table': table
        } only %}
    {% endif %}
    {% if default_sliders_state != 'disabled' %}
    </div>
    {% endif %}
{% endif %}

{# Displays Space usage and row statistics #}
{% if show_stats %}
    {{ table_stats|raw }}
{% endif %}
<div class="clearfloat"></div>
{% endblock %}
